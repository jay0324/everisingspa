import{aq as s,ar as i,as as o}from"./index.876e2599.js";import{api as h}from"./axios.1da00631.js";const u=s("auth",{state:()=>({email:null,isLogin:!1,authData:null}),getters:{getEmail:t=>t.email,getIsLogin:t=>t.isLogin,getAuthData:t=>t.authData},actions:{init(){i.getItem("auth")===null&&i.set("auth",JSON.stringify({email:this.email,isLogin:this.isLogin,authData:this.authData})),this.restoreStorage()},checkLogin(){this.init(),this.isLogin||this.router.push({path:"/auth/login"})},logout(){this.clearData(),this.router.push({path:"/auth/login"}),this.removeStorage()},async login(t){try{const e={params:t};await h.post("/web/session/authenticate",e).then(a=>{console.log(a),a.status===200&&a.data.error?o.create({title:a.data.error.data.message,message:a.data.error.data.message}):(this.isLogin=!0,this.authData=a.data,this.updateStorage(),this.loginSuccess())})}catch(e){if(e)throw e}},clearData(){this.email=null,this.isLogin=!1,this.authData=null},removeStorage(){i.remove("auth")},updateStorage(){this.isLogin?i.set("auth",JSON.stringify({email:this.email,isLogin:this.isLogin,authData:this.authData})):this.removeStorage()},restoreStorage(){const t=JSON.parse(i.getItem("auth"));t.isLogin&&this.restoreState(t)},restoreState(t){this.email=t.email,this.isLogin=t.isLogin,this.authData=t.authData},loginSuccess(){this.isLogin&&this.router.push({path:"/"})}}});export{u};
